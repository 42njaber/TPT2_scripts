:global int tideshift
:global int temporal_barrier
:global int frost_nova

:global double immortality_shield_duration
:global double tideshift_cd
:global double tideshift_duration
:global double temporal_barrier_cd
:global double temporal_barrier_duration

:global double super_tower_2_cd
:global double super_tower_2_duration
:global double super_tower_1_3_cd
:global double super_tower_1_3_duration

:global double tower_energy_max
:global double tower_energy
:global double tower_reserved_energy
:global double tower_planned_energy
:global double e

:local double time
:local double moon_cutoff
:local double energy_formula

gotoif(aftercast, max(immortality_shield_duration, max(tideshift_duration, temporal_barrier_cd)) + max(0., ((tower_energy_max * 0.01 + 5000.) * 0.6 - tower_energy + tower_reserved_energy)) > 0.)
useinstant(temporal_barrier)
temporal_barrier_cd = 70. * 0.9 + 0.001
temporal_barrier_duration = 30.
tower_energy -= (tower_energy_max * 0.01 + 5000.) * 0.6

aftercast: time = max(immortality_shield_duration, max(tideshift_duration, temporal_barrier_cd)) * (1. + 3. * (min(super_tower_2_duration, max(immortality_shield_duration, max(tideshift_duration, temporal_barrier_cd))) + max(0., max(immortality_shield_duration, max(tideshift_duration, temporal_barrier_cd)) - max(super_tower_2_cd, super_tower_1_3_duration))) / max(max(immortality_shield_duration, max(tideshift_duration, temporal_barrier_cd)), 0.00000000001))
moon_cutoff = max(0., min(time, 5. * ((2. - max(0.9, 2. * tower_energy / tower_energy_max)) // e)))
energy_formula = e^(moon_cutoff * (0. - 0.2)) * (tower_energy + (e ^ (moon_cutoff * 0.2) - 1.) * tower_energy_max) + (tower_energy_max / 10.) * max(0., time - moon_cutoff)

tower_reserved_energy += max(0., ((tower_energy_max * 0.01 + 5000.) * 0.6) - max(0., energy_formula - tower_energy - tower_planned_energy))
tower_planned_energy += max(0., min(energy_formula - tower_energy, ((tower_energy_max * 0.01 + 5000.) * 0.6) - max(0., energy_formula - tower_energy - ((tower_energy_max * 0.01 + 5000.) * 0.6))))




gotoif(aftercasttide, max(immortality_shield_duration, max(tideshift_cd, temporal_barrier_duration)) + max(0., ((tower_energy_max * 0.43 + 5100.) * 0.6 - tower_energy + tower_reserved_energy)) > 0.)
useinstant(tideshift)
useinstant(frost_nova)
tideshift_cd = 80. * 0.9 + 0.001
tideshift_duration = 30.
tower_energy -= (tower_energy_max * 0.43 + 5100.) * 0.6

aftercasttide: time = max(immortality_shield_duration, max(tideshift_cd, temporal_barrier_duration)) * (1. + 3. * (min(super_tower_2_duration, max(immortality_shield_duration, max(tideshift_cd, temporal_barrier_duration))) + max(0., max(immortality_shield_duration, max(tideshift_cd, temporal_barrier_duration)) - max(super_tower_2_cd, super_tower_1_3_duration))) / max(max(immortality_shield_duration, max(tideshift_cd, temporal_barrier_duration)), 0.00000000001))
moon_cutoff = max(0., min(time, 5. * ((2. - max(0.9, 2. * tower_energy / tower_energy_max)) // e)))
energy_formula = e^(moon_cutoff * (0. - 0.2)) * (tower_energy + (e ^ (moon_cutoff * 0.2) - 1.) * tower_energy_max) + (tower_energy_max / 10.) * max(0., time - moon_cutoff)

tower_reserved_energy += max(0., ((tower_energy_max * 0.43 + 5100.) * 0.6) - max(0., energy_formula - tower_energy - tower_planned_energy))
tower_planned_energy += max(0., min(energy_formula - tower_energy, ((tower_energy_max * 0.43 + 5100.) * 0.6) - max(0., energy_formula - tower_energy - ((tower_energy_max * 0.43 + 5100.) * 0.6))))

wait(0.0)
