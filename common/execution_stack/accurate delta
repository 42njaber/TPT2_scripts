:local int lower_bound
:local int upper_bound
:local int wait_time
:local int wait_begin
:local int wait_end
:local double precision
:global int turbo_counter
:global double delta_time
:global double timestamp

; this script computes the time passed since the last frame, precision is configurable but it seems like the game's own precision is limited to a miliseconds
;   still I wanted to use a higher precision just in case
precision = 1. / 100000.
upper_bound = 100

loop: wait_time = min(1, lower_bound) * ((upper_bound + 1 + lower_bound) / 2) + (1 -  min(1, lower_bound)) * upper_bound * 2
; wait_time = lower_bound == 0 ? upper_bound * 2 : (upper_bound + 1 + lower_bound) / 2)
wait_begin = turbo_counter
wait(i2d(wait_time) * precision)
upper_bound = min(upper_bound * (1 + (1 -  min(1, lower_bound))), (wait_time - 1) / (turbo_counter - wait_begin - 3) + upper_bound * (1 + (1 -  min(1, lower_bound)) - min(1, turbo_counter - wait_begin - 3)))
; upper_bound = lower_bound == 0 ? upper_bound * 2 : min(upper_bound, wait_cycles > 1 ? (wait_time - 1) / (wait_cycles - 1) : upper_bound)
lower_bound = max(lower_bound, wait_time / (turbo_counter - wait_begin - 3) * min(1, lower_bound + turbo_counter - wait_begin - 4))
; lower_bound = lower_bound == 0 && wait_cycles == 1 ? 0 : max(lower_bound, wait_time / wait_cycles)
gotoif(loop, upper_bound != lower_bound)
delta_time = i2d(upper_bound) * precision
timestamp += delta_time
wait(0.0)
